#  /*
#  | This GitHub action is responsible for testing the application.
#  | It can be deployed to the production environment with manual confirmation.
#  | This action runs on the master branch only..
#  */
name: Production (push/pr)

# Run on master.
on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

# Workflow jobs.
jobs:

  # Build job, builds assets and stores them in a cache.
  build:
    runs-on: ubuntu-latest
    steps:

      # Set up PHP for composer.
      - name: Set up PHP
        uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: '8.0'

      # Clone the interface component repository.
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # Install dependencies.
      - name: Install npm packages
        run: npm install
      
      - name: Install Composer packages
        run: composer install

      - name: Compile front-end assets
        run: npm run dev

      # Cache dependencies under runner-unique key.
      - name: Cache npm dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.GITHUB_RUN_NUMBER }}-npm-prod
      
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-${{ env.GITHUB_RUN_NUMBER }}-composer-prod
      
      - name: Cache front-end artifacts
        uses: actions/cache@v2
        with:
          path: public
          key: ${{ runner.os }}-${{ env.GITHUB_RUN_NUMBER }}-artifacts-prod
  
  # Test, depends on the build stage.
  test:
    runs-on: ubuntu-latest
    needs: 'build'
    steps:

      # Set up PHP.
      - name: Set up PHP
        uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: '8.0'

      # Clone the interface component repository.
      - name: Checkout repository
        uses: actions/checkout@v3

      # Copy env file.
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      
      # Restore cached dependencies and artifacts.
      - name: Restore cached npm dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.GITHUB_RUN_NUMBER }}-npm-prod
      
      - name: Restore cached dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-${{ env.GITHUB_RUN_NUMBER }}-composer-prod
      
      - name: Restore cached artifacts
        uses: actions/cache@v2
        with:
          path: public
          key: ${{ runner.os }}-${{ env.GITHUB_RUN_NUMBER }}-artifacts-prod
      
      # Laravel setup steps.
      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      # Test database.
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      # Run tests.
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit
  
  deploy:
    runs-on: ubuntu-latest
    environment: 'production'
    needs: test

    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "b2c6-interface-prod"
          heroku_email: "drenthjoey@gmail.com"
        if: github.event_name != 'pull_request'

